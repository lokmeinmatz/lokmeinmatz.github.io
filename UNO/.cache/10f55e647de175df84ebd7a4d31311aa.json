{"dependencies":[{"name":"D:\\Programmieren\\GitHub\\lokmeinmatz.github.io\\UNO\\tsconfig.json","includedInParent":true,"mtime":1518443105776},{"name":"./colors","loc":{"line":3,"column":25}},{"name":"./jquery","loc":{"line":4,"column":18}}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst colors_1 = require(\"./colors\");\r\nconst $ = require(\"./jquery\");\r\nclass UI {\r\n    init(joinHandle, createHandle, readyHandle) {\r\n        //must be called on domready\r\n        //Set ui colors\r\n        const body = $(\"body\").get(0);\r\n        body.style.setProperty(\"--verylight\", colors_1.uiColors.verylight);\r\n        body.style.setProperty(\"--light\", colors_1.uiColors.light);\r\n        body.style.setProperty(\"--medium\", colors_1.uiColors.medium);\r\n        body.style.setProperty(\"--dark\", colors_1.uiColors.dark);\r\n        body.style.setProperty(\"--verydark\", colors_1.uiColors.verydark);\r\n        body.style.setProperty(\"--active\", colors_1.uiColors.active);\r\n        body.style.setProperty(\"--success\", colors_1.uiColors.success);\r\n        this.selectedPreview = $(\"#selected-card\");\r\n        //Set modal handlers\r\n        $(\".tab-btn#tab-join-btn\").click(function () {\r\n            $(this).addClass(\"active\");\r\n            $(\".tab-btn#tab-create-btn\").removeClass(\"active\");\r\n            //set modals\r\n            $(\".tab-content#create-session-tab\").removeClass(\"active\");\r\n            $(\".tab-content#join-session-tab\").addClass(\"active\");\r\n        });\r\n        $(\".tab-btn#tab-create-btn\").click(function () {\r\n            $(this).addClass(\"active\");\r\n            $(\".tab-btn#tab-join-btn\").removeClass(\"active\");\r\n            //set modals\r\n            $(\".tab-content#join-session-tab\").removeClass(\"active\");\r\n            $(\".tab-content#create-session-tab\").addClass(\"active\");\r\n        });\r\n        //handle join \r\n        $(\"#join-session-tab form\").submit(function (event) {\r\n            joinHandle(event, $(this));\r\n        });\r\n        //handle create\r\n        $(\"#create-session-tab form\").submit(function (event) {\r\n            createHandle(event, $(this));\r\n        });\r\n        //handle ready\r\n        $(\".modal#waiting button\").click(function () {\r\n            if ($(this).hasClass(\"ready\")) {\r\n                $(this).removeClass(\"ready\");\r\n                $(this).text(\"I'M READY\");\r\n            }\r\n            else {\r\n                $(this).addClass(\"ready\");\r\n                $(this).text(\"WAIT FOR PLAYERS\");\r\n            }\r\n            readyHandle($(this), $(this).hasClass(\"ready\"));\r\n        });\r\n        //selected card handler\r\n        $(\"#selected-card\").click(function () {\r\n            //close selectedPreview if is clicked    \r\n            UIi.selectedPreview.removeClass(\"open\");\r\n            //show hand card\r\n            if (UIi.selectedHand) {\r\n                //sets scale of handcard to 1\r\n                UIi.selectedHand.removeClass(\"selected\");\r\n            }\r\n        });\r\n        $(\".play\").click(function () {\r\n            //get type of card\r\n            const ct = UIi.selectedPreview.data(\"cardtype\");\r\n            console.log(\"Playing card \" + ct);\r\n            //remove card from hand\r\n            UIi.selectedHand.remove();\r\n            UIi.addPlayedCard(ct);\r\n        });\r\n    }\r\n    setModal(id) {\r\n        $(\".modal\").removeClass(\"active\");\r\n        $(\".modal#\" + id).addClass(\"active\");\r\n    }\r\n    setHandClickHandler() {\r\n        $(\"#handcards .handcard\").off(\"click\");\r\n        $(\"#handcards .handcard\").click(function () {\r\n            if (UIi.selectedHand) {\r\n                //sets scale of handcard to 1\r\n                UIi.selectedHand.removeClass(\"selected\");\r\n            }\r\n            if (!UIi.selectedHand || UIi.selectedHand.first().get(0) != $(this).get(0)) {\r\n                UIi.selectedHand = $(this);\r\n                //get cardtype\r\n                const ct = UIi.selectedHand.data(\"cardtype\");\r\n                UIi.setPreviewCard(ct);\r\n                UIi.selectedPreview.addClass(\"open\");\r\n                UIi.selectedHand.addClass(\"selected\");\r\n            }\r\n            else {\r\n                UIi.selectedHand = null;\r\n            }\r\n        });\r\n    }\r\n    setPreviewCard(cardType) {\r\n        if (cardType.charAt(0) == \"r\")\r\n            this.selectedPreview.css(\"background-color\", colors_1.cardColors.red);\r\n        else if (cardType.charAt(0) == \"g\")\r\n            this.selectedPreview.css(\"background-color\", colors_1.cardColors.green);\r\n        else if (cardType.charAt(0) == \"b\")\r\n            this.selectedPreview.css(\"background-color\", colors_1.cardColors.blue);\r\n        else if (cardType.charAt(0) == \"y\")\r\n            this.selectedPreview.css(\"background-color\", colors_1.cardColors.yellow);\r\n        this.selectedPreview.find(\"#num\").text(cardType.charAt(1));\r\n        this.selectedPreview.data(\"cardtype\", cardType);\r\n    }\r\n    addHandCard(cardType) {\r\n        const root = $(\"#handcards\");\r\n        const card = $(\"<p class='card handcard'>\");\r\n        if (cardType.charAt(0) == \"r\")\r\n            card.css(\"background-color\", colors_1.cardColors.red);\r\n        else if (cardType.charAt(0) == \"g\")\r\n            card.css(\"background-color\", colors_1.cardColors.green);\r\n        else if (cardType.charAt(0) == \"b\")\r\n            card.css(\"background-color\", colors_1.cardColors.blue);\r\n        else if (cardType.charAt(0) == \"y\")\r\n            card.css(\"background-color\", colors_1.cardColors.yellow);\r\n        card.text(cardType.charAt(1));\r\n        card.data(\"cardtype\", cardType);\r\n        root.append(card);\r\n    }\r\n    addPlayedCard(cardType) {\r\n        const root = $(\"#played-cards\");\r\n        if (root.children().length > 6) {\r\n            root.children().first().remove();\r\n        }\r\n        //Set transparency\r\n        root.children().each((index, val) => {\r\n            $(val).css(\"opacity\", 1.0 - (index / 10));\r\n        });\r\n        const card = $(\"<p class='card'>\");\r\n        if (cardType.charAt(0) == \"r\")\r\n            card.css(\"background-color\", colors_1.cardColors.red);\r\n        else if (cardType.charAt(0) == \"g\")\r\n            card.css(\"background-color\", colors_1.cardColors.green);\r\n        else if (cardType.charAt(0) == \"b\")\r\n            card.css(\"background-color\", colors_1.cardColors.blue);\r\n        else if (cardType.charAt(0) == \"y\")\r\n            card.css(\"background-color\", colors_1.cardColors.yellow);\r\n        card.text(cardType.charAt(1));\r\n        card.css(\"transform\", \"rotate(\" + (Math.random() * 50 - 25) + \"deg)\");\r\n        root.append(card);\r\n    }\r\n    updateWaitingScreen(data) {\r\n        //Set session id\r\n        $(\".modal#waiting h1\").text(\"SessionID: \" + data.sessionID);\r\n        const root = $(\".modal#waiting table\");\r\n        root.children().remove();\r\n        for (let player of data.players) {\r\n            const tr = $(\"<tr>\");\r\n            tr.append(\"<td>\" + player.name + \"</td>\");\r\n            tr.append(\"<td>\" + player.id + \"</td>\");\r\n            if (player.ready)\r\n                tr.append(\"<td><i class='material-icons'>done</i></td>\");\r\n            else\r\n                tr.append(\"<td><i class='material-icons'>cached</i></td>\");\r\n            root.append(tr);\r\n        }\r\n    }\r\n    setModalVisiblilty(visible) {\r\n        if (visible) {\r\n            $(\".modal-container\").addClass(\"active\");\r\n        }\r\n        else {\r\n            $(\".modal-container\").removeClass(\"active\");\r\n        }\r\n    }\r\n    setOtherPlayers(players, active) {\r\n        //Set players\r\n        const jPlayers = $(\"#players\");\r\n        jPlayers.children().remove();\r\n        for (let player of players) {\r\n            const jPlayer = $(\"<div class='player'>\");\r\n            if (player.id == active)\r\n                jPlayer.addClass(\"active\");\r\n            jPlayer.append(`<h3>${player.name}</h3>`);\r\n            jPlayer.append(`<p class='handcard-count'>${player.cards}</p>`);\r\n            jPlayers.append(jPlayer);\r\n        }\r\n    }\r\n    setIamActive(active) {\r\n        if (active)\r\n            $('#handcard-wrapper').addClass(\"active\");\r\n        else\r\n            $('#handcard-wrapper').removeClass(\"active\");\r\n    }\r\n    setDirection(clockwise) {\r\n        const spinner = $(\".spinner\");\r\n        const container = $(\".spinner-div\");\r\n        container.addClass(\"zoom\");\r\n        window.setTimeout(() => {\r\n            if (clockwise)\r\n                spinner.removeClass(\"ccw\");\r\n            else\r\n                spinner.addClass(\"ccw\");\r\n        }, 250);\r\n        //remove zoom class\r\n        window.setTimeout(() => {\r\n            container.removeClass(\"zoom\");\r\n        }, 500);\r\n    }\r\n    updateDeck(deck) {\r\n        const Jdeck = $(\"#deck\");\r\n        Jdeck.children().remove();\r\n        for (let i = 0; i < deck.length; i++) {\r\n            const card = $(\"<div class='card deck-card'>\");\r\n            card.css(\"left\", i * 5);\r\n            card.css(\"top\", i * 5);\r\n            Jdeck.append(card);\r\n            card.click(function () {\r\n                //add card to hand, if playable: preview\r\n                if (deck.length > 0) {\r\n                    let cardType = deck.pop();\r\n                    UIi.addHandCard(cardType);\r\n                    UIi.setHandClickHandler();\r\n                    UIi.updateDeck(deck);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\nconst UIi = new UI();\r\nexports.default = UIi;\r\n","map":{"version":3,"file":"UI.js","sourceRoot":"","sources":["UI.ts"],"names":[],"mappings":"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","sourcesContent":["import {cardColors, uiColors} from \"./colors\"\r\nimport {GameUpdate} from \"./utils\"\r\n\r\nconst $ : JQueryStatic = require(\"./jquery\")\r\n\r\n\r\n\r\n\r\nclass UI {\r\n\r\n    selectedHand : JQuery\r\n    selectedPreview : JQuery \r\n\r\n    init(\r\n        joinHandle : (event : JQuery.Event, jObj : JQuery) => void, \r\n        createHandle : (event : JQuery.Event, jObj : JQuery) => void,\r\n        readyHandle : (jObj : JQuery, ready:boolean) => void) {\r\n        //must be called on domready\r\n        \r\n        \r\n        //Set ui colors\r\n        const body = $(\"body\").get(0)\r\n        body.style.setProperty(\"--verylight\", uiColors.verylight)\r\n        body.style.setProperty(\"--light\", uiColors.light)\r\n        body.style.setProperty(\"--medium\", uiColors.medium)\r\n        body.style.setProperty(\"--dark\", uiColors.dark)\r\n        body.style.setProperty(\"--verydark\", uiColors.verydark)\r\n        body.style.setProperty(\"--active\", uiColors.active)\r\n        body.style.setProperty(\"--success\", uiColors.success)\r\n\r\n\r\n        this.selectedPreview = $(\"#selected-card\")\r\n\r\n        //Set modal handlers\r\n        $(\".tab-btn#tab-join-btn\").click(function() {\r\n            $(this).addClass(\"active\")\r\n            $(\".tab-btn#tab-create-btn\").removeClass(\"active\")\r\n\r\n            //set modals\r\n            $(\".tab-content#create-session-tab\").removeClass(\"active\")\r\n            $(\".tab-content#join-session-tab\").addClass(\"active\")\r\n        })\r\n        $(\".tab-btn#tab-create-btn\").click(function() {\r\n            $(this).addClass(\"active\")\r\n            $(\".tab-btn#tab-join-btn\").removeClass(\"active\")\r\n\r\n            //set modals\r\n            $(\".tab-content#join-session-tab\").removeClass(\"active\")\r\n            $(\".tab-content#create-session-tab\").addClass(\"active\")\r\n        })\r\n\r\n        //handle join \r\n        $(\"#join-session-tab form\").submit(function(event) {\r\n            joinHandle(event, $(this))\r\n        })\r\n\r\n        //handle create\r\n        $(\"#create-session-tab form\").submit(function(event) {\r\n            createHandle(event, $(this))\r\n        })\r\n\r\n        //handle ready\r\n        $(\".modal#waiting button\").click(function() {\r\n            \r\n    \r\n            if($(this).hasClass(\"ready\")) {\r\n                $(this).removeClass(\"ready\")\r\n                $(this).text(\"I'M READY\")\r\n                \r\n            }\r\n            else {\r\n                $(this).addClass(\"ready\")\r\n                $(this).text(\"WAIT FOR PLAYERS\")\r\n            }\r\n            readyHandle($(this), $(this).hasClass(\"ready\"))\r\n            \r\n        })\r\n\r\n        //selected card handler\r\n        $(\"#selected-card\").click(function() {\r\n            //close selectedPreview if is clicked    \r\n            UIi.selectedPreview.removeClass(\"open\")\r\n    \r\n            //show hand card\r\n            if(UIi.selectedHand) {\r\n                //sets scale of handcard to 1\r\n                UIi.selectedHand.removeClass(\"selected\")\r\n            }\r\n        })\r\n\r\n\r\n        $(\".play\").click(function() {\r\n            //get type of card\r\n            const ct = UIi.selectedPreview.data(\"cardtype\")\r\n            console.log(\"Playing card \"+ct)\r\n            //remove card from hand\r\n            UIi.selectedHand.remove()\r\n            UIi.addPlayedCard(ct)\r\n        })\r\n    }\r\n\r\n    setModal(id : string) {\r\n        $(\".modal\").removeClass(\"active\")\r\n        $(\".modal#\"+id).addClass(\"active\")\r\n    }\r\n\r\n    setHandClickHandler() {\r\n        $(\"#handcards .handcard\").off(\"click\")\r\n        $(\"#handcards .handcard\").click(function(){\r\n            \r\n            if(UIi.selectedHand) {\r\n                //sets scale of handcard to 1\r\n                UIi.selectedHand.removeClass(\"selected\")\r\n            }\r\n\r\n            if(!UIi.selectedHand || UIi.selectedHand.first().get(0) != $(this).get(0)) {\r\n                UIi.selectedHand = $(this)\r\n                //get cardtype\r\n                const ct = UIi.selectedHand.data(\"cardtype\")\r\n                UIi.setPreviewCard(ct)\r\n\r\n                UIi.selectedPreview.addClass(\"open\")\r\n                UIi.selectedHand.addClass(\"selected\")\r\n\r\n            }\r\n            else {\r\n                UIi.selectedHand = null\r\n            }\r\n            \r\n\r\n        })\r\n    }\r\n\r\n    \r\n    setPreviewCard(cardType: string) {\r\n        if(cardType.charAt(0) == \"r\")this.selectedPreview.css(\"background-color\", cardColors.red)\r\n        else if(cardType.charAt(0) == \"g\")this.selectedPreview.css(\"background-color\",cardColors.green)\r\n        else if(cardType.charAt(0) == \"b\")this.selectedPreview.css(\"background-color\", cardColors.blue)\r\n        else if(cardType.charAt(0) == \"y\")this.selectedPreview.css(\"background-color\", cardColors.yellow)\r\n        this.selectedPreview.find(\"#num\").text(cardType.charAt(1))\r\n        this.selectedPreview.data(\"cardtype\", cardType)\r\n    }  \r\n    \r\n    addHandCard(cardType: string) {\r\n        const root = $(\"#handcards\")\r\n    \r\n        const card = $(\"<p class='card handcard'>\")\r\n        if(cardType.charAt(0) == \"r\")card.css(\"background-color\", cardColors.red)\r\n        else if(cardType.charAt(0) == \"g\")card.css(\"background-color\",cardColors.green)\r\n        else if(cardType.charAt(0) == \"b\")card.css(\"background-color\", cardColors.blue)\r\n        else if(cardType.charAt(0) == \"y\")card.css(\"background-color\", cardColors.yellow)\r\n        card.text(cardType.charAt(1))\r\n        card.data(\"cardtype\", cardType)\r\n        root.append(card)\r\n    }\r\n\r\n    addPlayedCard(cardType: string) {\r\n\r\n    \r\n        const root = $(\"#played-cards\")\r\n        if(root.children().length > 6) {\r\n            root.children().first().remove()\r\n        }\r\n    \r\n        //Set transparency\r\n        root.children().each((index, val) => {\r\n            $(val).css(\"opacity\", 1.0 - (index/10))\r\n        })\r\n    \r\n        const card = $(\"<p class='card'>\")\r\n        if(cardType.charAt(0) == \"r\")card.css(\"background-color\", cardColors.red)\r\n        else if(cardType.charAt(0) == \"g\")card.css(\"background-color\", cardColors.green)\r\n        else if(cardType.charAt(0) == \"b\")card.css(\"background-color\", cardColors.blue)\r\n        else if(cardType.charAt(0) == \"y\")card.css(\"background-color\", cardColors.yellow)\r\n    \r\n        card.text(cardType.charAt(1))\r\n        card.css(\"transform\", \"rotate(\"+(Math.random()*50-25)+\"deg)\")\r\n        root.append(card)\r\n        \r\n    }\r\n\r\n    updateWaitingScreen(data) {\r\n        //Set session id\r\n        $(\".modal#waiting h1\").text(\"SessionID: \"+data.sessionID)\r\n\r\n        const root = $(\".modal#waiting table\")\r\n        root.children().remove()\r\n        for(let player of data.players) {\r\n            const tr = $(\"<tr>\")\r\n            tr.append(\"<td>\"+player.name+\"</td>\")\r\n            tr.append(\"<td>\"+player.id+\"</td>\")\r\n            if(player.ready)tr.append(\"<td><i class='material-icons'>done</i></td>\")\r\n            else tr.append(\"<td><i class='material-icons'>cached</i></td>\")\r\n            root.append(tr)\r\n        }\r\n    }\r\n\r\n    setModalVisiblilty(visible: boolean) {\r\n        if(visible) {\r\n            $(\".modal-container\").addClass(\"active\")\r\n        }\r\n        else {\r\n            $(\".modal-container\").removeClass(\"active\")\r\n        }\r\n    }\r\n\r\n    setOtherPlayers(players: GameUpdate[\"players\"], active: string) {\r\n        //Set players\r\n        const jPlayers = $(\"#players\")\r\n        jPlayers.children().remove()\r\n\r\n        for(let player of players) {\r\n            const jPlayer = $(\"<div class='player'>\")\r\n            if(player.id == active)jPlayer.addClass(\"active\")\r\n            jPlayer.append(`<h3>${player.name}</h3>`)\r\n            jPlayer.append(`<p class='handcard-count'>${player.cards}</p>`)\r\n            jPlayers.append(jPlayer)\r\n        }\r\n    }\r\n\r\n    setIamActive(active : boolean) {\r\n        if(active)$('#handcard-wrapper').addClass(\"active\")\r\n        else $('#handcard-wrapper').removeClass(\"active\")\r\n    }\r\n\r\n    \r\n\r\n    setDirection(clockwise : boolean) {\r\n        const spinner = $(\".spinner\")\r\n        const container = $(\".spinner-div\")\r\n        container.addClass(\"zoom\")\r\n    \r\n        window.setTimeout(() =>  {\r\n            if(clockwise)spinner.removeClass(\"ccw\")\r\n            else spinner.addClass(\"ccw\")\r\n        }, 250)\r\n    \r\n        //remove zoom class\r\n        window.setTimeout(() => {\r\n            container.removeClass(\"zoom\")\r\n        }, 500)\r\n        \r\n    }\r\n\r\n    updateDeck(deck : string[]) {\r\n        const Jdeck = $(\"#deck\")\r\n        Jdeck.children().remove()\r\n        for(let i = 0; i < deck.length; i++) {\r\n            const card = $(\"<div class='card deck-card'>\")\r\n            card.css(\"left\", i*5)\r\n            card.css(\"top\", i*5)\r\n            Jdeck.append(card)\r\n    \r\n            card.click(function() {\r\n                //add card to hand, if playable: preview\r\n                if(deck.length > 0) {\r\n                    let cardType = deck.pop()\r\n                    UIi.addHandCard(cardType)\r\n                    UIi.setHandClickHandler()\r\n                    UIi.updateDeck(deck)\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nconst UIi : UI = new UI()\r\n\r\nexport default UIi"]}},"hash":"83613476b7461d8da5033fd59679fa90","cacheData":{"env":{}}}