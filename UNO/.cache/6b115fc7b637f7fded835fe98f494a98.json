{"dependencies":[{"name":"D:\\Programmieren\\GitHub\\lokmeinmatz.github.io\\UNO\\tsconfig.json","includedInParent":true,"mtime":1518443105776},{"name":"./UI","loc":{"line":3,"column":21}},{"name":"./jquery","loc":{"line":4,"column":18}}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst UI_1 = require(\"./UI\");\r\nconst $ = require(\"./jquery\");\r\nlet deck = [\"r4\", \"g7\", \"b2\", \"y9\", \"r8\", \"g3\", \"b6\", \"y3\"];\r\n$(document).ready(() => {\r\n    var socket = io.connect();\r\n    //get canvas\r\n    const joinHandle = function (event, jObj) {\r\n        event.preventDefault();\r\n        //Send reqest to join\r\n        const sid = jObj.find(\"#sessionID\").val();\r\n        const nick = jObj.find(\"#nickname\").val();\r\n        console.log(`trying to join ${sid} with nick ${nick}`);\r\n        socket.emit(\"join\", { sessionID: sid, nickname: nick });\r\n    };\r\n    const createHandle = function (event, jObj) {\r\n        event.preventDefault();\r\n        //Send reqest to join\r\n        const nick = jObj.find(\"#nickname\").val();\r\n        console.log(`trying to create session with nick ${nick}`);\r\n        socket.emit(\"create\", nick);\r\n    };\r\n    //-------------------------------\r\n    //Handle waiting lobby\r\n    const readyHandle = function (jObj, ready) {\r\n        console.log(`Player is ready: ${ready}`);\r\n        socket.emit(\"waiting.ready\", ready);\r\n    };\r\n    UI_1.default.init(joinHandle, createHandle, readyHandle);\r\n    let playerID = null;\r\n    //get join-response\r\n    socket.on(\"join.res\", (res) => {\r\n        console.log(res);\r\n        if (res.success) {\r\n            //Get to waiting lobby\r\n            UI_1.default.setModal(\"waiting\");\r\n            playerID = res.playerID;\r\n        }\r\n        else {\r\n            //display error\r\n            alert(\"Error on joining/creating session\");\r\n        }\r\n    });\r\n    socket.on(\"waiting.update\", (data) => {\r\n        console.log(\"received waiting.update\");\r\n        UI_1.default.updateWaitingScreen(data);\r\n    });\r\n    socket.on(\"game.start\", () => {\r\n        UI_1.default.setModalVisiblilty(false);\r\n        console.log(\"game starting\");\r\n        //Set gameData to ui\r\n    });\r\n    //do the game update\r\n    socket.on(\"game.update\", (gameData) => {\r\n        console.log(\"received game.update\");\r\n        console.log(playerID, gameData.players);\r\n        UI_1.default.setOtherPlayers(gameData.players.filter(player => player.id != playerID), gameData.activePlayerID);\r\n        if (gameData.activePlayerID == playerID) {\r\n            UI_1.default.setIamActive(true);\r\n        }\r\n        else {\r\n            UI_1.default.setIamActive(false);\r\n        }\r\n    });\r\n    for (let i = 0; i < 4; i++) {\r\n        UI_1.default.addHandCard(deck.pop());\r\n    }\r\n    UI_1.default.updateDeck(deck);\r\n    UI_1.default.setHandClickHandler();\r\n});\r\n","map":{"version":3,"file":"app.js","sourceRoot":"","sources":["app.ts"],"names":[],"mappings":"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","sourcesContent":["import { setTimeout } from \"timers\";\r\nimport UI from \"./UI\"\r\nimport {GameUpdate} from \"./utils\"\r\nconst $ : JQueryStatic = require(\"./jquery\")\r\n\r\n\r\n\r\nlet deck: string[] = [\"r4\", \"g7\", \"b2\", \"y9\", \"r8\", \"g3\", \"b6\", \"y3\"]\r\n\r\n\r\n\r\ndeclare const io \r\n\r\n$(document).ready(() => {\r\n    var socket : SocketIO.Socket = io.connect()\r\n    \r\n    //get canvas\r\n\r\n    const joinHandle = function(event : JQuery.Event, jObj : JQuery) {\r\n        event.preventDefault()\r\n        //Send reqest to join\r\n        const sid = jObj.find(\"#sessionID\").val()\r\n        const nick = jObj.find(\"#nickname\").val()\r\n        console.log(`trying to join ${sid} with nick ${nick}`)\r\n        socket.emit(\"join\", {sessionID : sid, nickname: nick})\r\n    }\r\n\r\n    const createHandle = function(event : JQuery.Event, jObj: JQuery) {\r\n        event.preventDefault()\r\n        //Send reqest to join\r\n        const nick = jObj.find(\"#nickname\").val()\r\n        console.log(`trying to create session with nick ${nick}`)\r\n        socket.emit(\"create\", nick)\r\n    }\r\n\r\n    //-------------------------------\r\n    //Handle waiting lobby\r\n    \r\n    \r\n    const readyHandle = function(jObj: JQuery, ready: boolean) {\r\n        console.log(`Player is ready: ${ready}`)\r\n        socket.emit(\"waiting.ready\", ready)\r\n    }\r\n\r\n    UI.init(joinHandle, createHandle, readyHandle)\r\n\r\n    let playerID : string = null\r\n    \r\n\r\n    //get join-response\r\n    socket.on(\"join.res\", (res) => {\r\n        console.log(res)\r\n        if(res.success) {\r\n            //Get to waiting lobby\r\n            UI.setModal(\"waiting\")\r\n            playerID = res.playerID\r\n\r\n        }\r\n        else {\r\n            //display error\r\n            alert(\"Error on joining/creating session\")\r\n        }\r\n    })\r\n\r\n    \r\n    socket.on(\"waiting.update\", (data) => {\r\n\r\n        console.log(\"received waiting.update\")\r\n        \r\n        UI.updateWaitingScreen(data)\r\n    })\r\n\r\n    socket.on(\"game.start\", () => {\r\n        UI.setModalVisiblilty(false)\r\n        console.log(\"game starting\")\r\n        //Set gameData to ui\r\n    })\r\n\r\n    //do the game update\r\n    socket.on(\"game.update\", (gameData : GameUpdate) => {\r\n        console.log(\"received game.update\")\r\n        console.log(playerID, gameData.players)\r\n        UI.setOtherPlayers(gameData.players.filter(player => player.id != playerID), gameData.activePlayerID)\r\n        if(gameData.activePlayerID == playerID) {\r\n            UI.setIamActive(true)\r\n        }\r\n        else{ UI.setIamActive(false) }\r\n    })\r\n\r\n    \r\n    for(let i = 0; i < 4; i++) {\r\n        UI.addHandCard(deck.pop())\r\n    }\r\n    \r\n    UI.updateDeck(deck)\r\n    \r\n\r\n   \r\n\r\n    UI.setHandClickHandler()\r\n    \r\n    \r\n\r\n\r\n    \r\n\r\n   \r\n\r\n\r\n})\r\n\r\n\r\n\r\n"]}},"hash":"a747119074023e3011a49095f5486039","cacheData":{"env":{}}}